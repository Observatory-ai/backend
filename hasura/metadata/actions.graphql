type Mutation {
  googleAuth(googleAuthInput: GoogleAuthInput!): AuthOutput
}

type Mutation {
  googleCalendarActivation(
    googleCalendarActivationInput: GoogleCalendarActivationInput!
  ): Void
}

type Query {
  googleCalendarEvents: GoogleCalendarEventsOutput
}

type Mutation {
  login(loginInput: LoginInput!): AuthOutput
}

type Mutation {
  logout: Boolean
}

type Mutation {
  refreshTokens: AuthOutput
}

type Mutation {
  register(registerInput: RegisterInput!): AuthOutput
}

input LoginInput {
  emailOrUsername: String!
  password: String!
}

input RegisterInput {
  email: String!
  firstName: String!
  lastName: String!
  username: String!
  password: String!
  confirmPassword: String!
}

input GoogleAuthInput {
  accessToken: String
}

input GoogleCalendarActivationInput {
  activationCode: String
}

type AuthOutput {
  accessToken: String!
  uuid: String!
  email: String!
  username: String!
}

type Reminders {
  useDefault: Boolean
}

type End {
  dateTime: String
  timeZone: String
}

type Start {
  dateTime: String
  timeZone: String
}

type Organizer {
  email: String
  displayName: String
  self: Boolean
}

type Creator {
  email: String
  displayName: String
  self: Boolean
}

type Items {
  kind: String
  etag: String
  id: String
  status: String
  htmlLink: String
  created: String
  updated: String
  summary: String
  iCalUID: String
  sequence: Int
  eventType: String
  reminders: Reminders
  end: End
  start: Start
  organizer: Organizer
  creator: Creator
  attendees: [Attendees]
}

type Attendees {
  id: String
  email: String
  displayName: String
  organizer: Boolean
  self: Boolean
  resource: Boolean
  optional: Boolean
  responseStatus: String
  comment: String
  additionalGuests: Int
}

type DefaultReminders {
  method: String
  minutes: Int
}

type GoogleCalendarEventsOutput {
  kind: String
  etag: String
  summary: String
  updated: String
  timeZone: String
  accessRole: String
  items: [Items]
  defaultReminders: [DefaultReminders]
}

scalar Void
